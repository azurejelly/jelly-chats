plugins {
    id 'java'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
    id("xyz.jpenilla.run-velocity") version "2.3.1"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

group = 'dev.azuuure'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    implementation("redis.clients:jedis:6.0.0")
    implementation("org.apache.commons:commons-pool2:2.12.1")
    implementation("org.spongepowered:configurate-yaml:4.2.0")
//    implementation("org.incendo:cloud-velocity:2.0.0-beta.10")
}

tasks {
    runVelocity {
        // Configure the Velocity version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        velocityVersion("3.4.0-SNAPSHOT")

        downloadPlugins {
            modrinth("luckperms", "v5.5.0-velocity")
        }
    }
}

def targetJavaVersion = 17
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = ['version': project.version]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

project.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

tasks.named("build") {
    dependsOn tasks.named("shadowJar")
}

tasks {
    shadowJar {
        relocate("redis.clients.jedis", "dev.azuuure.staffchat.libs.jedis")
        relocate("org.apache.commons.pool2", "dev.azuuure.staffchat.libs.pool2")
        archiveFileName.set("staff-chat-${project.version}-dist.jar")
    }
}